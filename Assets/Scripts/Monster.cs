using UnityEngine;namespace BattleCubes{	public class Monster : MonoBehaviour	{		private Transform _target;		[SerializeField] private float _health, 			_defence, 			_damage, 			_speed,			_damageDelay;		public float Health { get; private set; }		private float _lastDamage;		public void InitMonster(Transform target)		{			_target = target;			Health = _health;		}		public void UpdateMonster()		{
			var dir = _target.position - transform.position;
			var angle = Mathf.Atan2(dir.y, dir.x) * Mathf.Rad2Deg;
			transform.rotation = Quaternion.AngleAxis(angle, Vector3.forward);
			transform.position = Vector3.MoveTowards(transform.position, _target.position, _speed * Time.deltaTime);
		}		private void OnTriggerEnter2D(Collider2D col)		{			DamagePlayer(col);			var projectile = col.gameObject.GetComponent<Weapon>();			if (projectile != null && projectile.Launched)			{				Health = Health - projectile.Damage * _defence;				Pool.Despawn(projectile.gameObject);				if (Health <= 0) Pool.Despawn(gameObject);			}		}		private void OnTriggerStay2D(Collider2D col)		{			DamagePlayer(col);		}		private void DamagePlayer(Collider2D col)		{			if(Time.time - _lastDamage < _damageDelay) return;			_lastDamage = Time.time;			var playerController = col.gameObject.GetComponent<PlayerController>();			if (playerController != null)			{				playerController.AddDamage(_damage);				return;			}		}	}}